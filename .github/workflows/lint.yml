name: Lint

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      
      - name: Read .nvmrc
        id: nvmrc
        uses: browniebroke/read-nvmrc-action@v1

      - run: |
          echo "Version from .nvmrc: ${{ steps.nvmrc.outputs.node_version }}"

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '${{ steps.nvmrc.outputs.node_version }}'

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          list-files: shell

          filters: |
            frontend:
              - added|modified: './frontend/**'
            backend:
              - added|modified: './backend/**'
            common:
              - added|modified: './common/**'

      - run: |
          echo "Changed files (raw):"
          echo "  Frontend:"
          printf "    %s\n" ${{ steps.filter.outputs.frontend_files }}
          echo "  Backend:"
          printf "    %s\n" ${{ steps.filter.outputs.backend_files }}
          echo "  Common:"
          printf "    %s\n" ${{ steps.filter.outputs.common_files }}

      - name: Prune paths
        id: paths
        run: |
          echo "::set-output name=frontend::${echo ${{ steps.filter.outputs.frontend_files }} | sed 's#frontend/##g'}"
          echo "::set-output name=backend::${echo ${{ steps.filter.outputs.backend_files }} | sed 's#backend/##g'}"
          echo "::set-output name=common::${echo ${{ steps.filter.outputs.common_files }} | sed 's#common/##g'}"

      - run: |
          echo "Changed files (pruned):"
          echo "  Frontend:"
          printf "    %s\n" ${{ steps.paths.outputs.frontend }}
          echo "  Backend:"
          printf "    %s\n" ${{ steps.paths.outputs.backend }}
          echo "  Common:"
          printf "    %s\n" ${{ steps.paths.outputs.common }}

      - name: Yarn install
        run: yarn

      - if: ${{ steps.filter.outputs.frontend == 'true' }}
        name: Run linters (Frontend)
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          eslint: true
          eslint_args: "${{ steps.paths.outputs.frontend }}"
          eslint_dir: frontend/
          
      - if: ${{ steps.filter.outputs.backend == 'true' }}
        name: Run linters (Backend)
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          eslint: true
          eslint_args: "${{ steps.paths.outputs.backend }}"
          eslint_dir: backend/

      - if: ${{ steps.filter.outputs.common == 'true' }}
        name: Run linters (Common)
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          eslint: true
          eslint_args: "${{ steps.paths.outputs.common }}"
          eslint_dir: common/
