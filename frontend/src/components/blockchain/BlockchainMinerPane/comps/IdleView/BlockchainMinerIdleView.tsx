import React from 'react';

import './BlockchainMinerIdleView.scss';
import { BlockchainMinerIdleState } from '../../../../../common/blockchain/miner/BlockchainMinerStateData';
import { Button, Card, Form, InputGroup } from 'react-bootstrap';

export const BlockchainMinerIdleView: React.FC<{
  state: BlockchainMinerIdleState;
}> = (props) => {
  const { state } = props;

  return (
    <div className="comp-blockchain-miner-idle-view">
      <Card>
        <Card.Header>Block Template</Card.Header>
        <Card.Body>
          <Card.Title>Coinbase Transaction</Card.Title>
          <Form>
            <Form.Group controlId="formBasicEmail">
              <Form.Label>Coinbase</Form.Label>
              <Form.Control
                type="text"
                placeholder="Arbitrary data to be put in the coinabase transaction's input..."
              />
              <Form.Text className="text-muted">
                This field carries no algorithmic significance.
              </Form.Text>
            </Form.Group>

            <Form.Group controlId="formBasicPassword">
              <Form.Label>Recipient Address</Form.Label>
              <Form.Control
                type="text"
                placeholder="Base58 encoded blockchain address of the recipient..."
              />
              <Form.Text className="text-muted">
                Please note that we use <code>base58</code> encoding for the
                addresses and keys, not <code>base58check</code>.
              </Form.Text>
            </Form.Group>

            <Form.Group controlId="formBasicEmail">
              <Form.Label>Value</Form.Label>
              <InputGroup>
                <Form.Control
                  type="number"
                  placeholder="Amount of currency generated by this block, a.k.a. the mining reward..."
                />
                <InputGroup.Append>
                  <Button
                    variant="info"
                    title="Automatically select a value based on the blockchain configuration of this simulation."
                  >
                    Use configuration
                  </Button>
                </InputGroup.Append>
              </InputGroup>
              <Form.Text className="text-muted">
                Setting this above what the blockchain configuration allows will
                cause other nodes to reject this block.
              </Form.Text>
            </Form.Group>
          </Form>

          <hr />

          <Card.Title>Block Header</Card.Title>
          <Form>
            <Form.Group controlId="formBasicEmail">
              <Form.Label>Previous Hash</Form.Label>
              <InputGroup>
                <Form.Control
                  type="text"
                  placeholder="Hash of the parent block..."
                />
                <InputGroup.Append>
                  <Button variant="info">Set to active branch leaf</Button>
                </InputGroup.Append>
              </InputGroup>
              <Form.Text className="text-muted">
                Selecting the leaf of the active branch minimises the chances of
                this block becoming <em>stale</em>.
              </Form.Text>
            </Form.Group>

            <Form.Group controlId="formBasicPassword">
              <Form.Label>Timestamp</Form.Label>
              <InputGroup>
                <Form.Control type="datetime-local" />
                <InputGroup.Append>
                  <Button variant="info">Set to 5 minutes later</Button>
                </InputGroup.Append>
              </InputGroup>
              <Form.Text className="text-muted">
                Approximate time of creation for this block. Does not need to be
                exact.
              </Form.Text>
            </Form.Group>

            <Form.Group controlId="formBasicEmail">
              <Form.Label>Difficulty Target</Form.Label>
              <InputGroup>
                <Form.Control
                  type="number"
                  placeholder="The amount of leading zeros this block's hash must have..."
                />
                <InputGroup.Append>
                  <Button
                    variant="info"
                    title="Automatically select a value based on the blockchain configuration of this simulation."
                  >
                    Use configuration
                  </Button>
                </InputGroup.Append>
              </InputGroup>
              <Form.Text className="text-muted">
                Setting this below what the blockchain configuration requires
                will cause other nodes to reject this block.
              </Form.Text>
            </Form.Group>
          </Form>
        </Card.Body>
        <Card.Footer>
          <Button variant="success">Start Mining</Button>
        </Card.Footer>
      </Card>
    </div>
  );
};
